name: Build APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            git \
            zip \
            unzip \
            python3-pip \
            autotools-dev \
            autoconf \
            automake \
            libtool \
            pkg-config \
            zlib1g-dev \
            libncurses5-dev \
            libncursesw5-dev \
            libtinfo5 \
            cmake \
            libffi-dev \
            libssl-dev \
            openjdk-17-jdk

      - name: Setup Environment Variables
        run: |
          echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV
          echo "/usr/lib/jvm/java-17-openjdk-amd64/bin" >> $GITHUB_PATH
          echo "ANDROID_SDK_ROOT=$HOME/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_HOME=$HOME/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$HOME/.buildozer/android/platform/android-ndk-r25b" >> $GITHUB_ENV
          echo "NDK_API=21" >> $GITHUB_ENV

      - name: Install Python Dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          pip install --upgrade cython==0.29.33
          pip install buildozer
          pip install scapy pyserial kivy

      - name: Cache Buildozer global directory
        uses: actions/cache@v3
        with:
          path: ~/.buildozer
          key: buildozer-global-${{ hashFiles('buildozer.spec') }}-v2
          restore-keys: |
            buildozer-global-v2-
            buildozer-global-

      - name: Cache Buildozer local directory
        uses: actions/cache@v3
        with:
          path: .buildozer
          key: buildozer-local-${{ hashFiles('buildozer.spec') }}-v2
          restore-keys: |
            buildozer-local-v2-
            buildozer-local-

      - name: Verify Java Installation
        run: |
          java -version
          javac -version
          echo "JAVA_HOME: $JAVA_HOME"
          which java
          which javac

      - name: Initialize Buildozer (First Time Setup)
        run: |
          # Create Android directories if they don't exist
          mkdir -p ~/.android
          echo 'count=0' > ~/.android/repositories.cfg

          # Initialize buildozer to download Android SDK/NDK
          buildozer android update || echo "Initial update completed with warnings"

      - name: Accept Android SDK Licenses
        run: |
          # Accept SDK licenses after SDK is downloaded
          if [ -d "$HOME/.buildozer/android/platform/android-sdk/cmdline-tools/latest/bin" ]; then
            yes | $HOME/.buildozer/android/platform/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses || echo "License acceptance completed"
          fi

          # Alternative license acceptance method
          if [ -d "$HOME/.buildozer/android/platform/android-sdk/tools/bin" ]; then
            yes | $HOME/.buildozer/android/platform/android-sdk/tools/bin/sdkmanager --licenses || echo "License acceptance completed"
          fi

      - name: Validate Buildozer Spec
        run: |
          buildozer -v android debug

      - name: Build APK with Debug Information
        run: |
          # Set debug mode for more verbose output
          export BUILDOZER_LOG_LEVEL=2
          export P4A_DEBUG=1

          # Ensure proper Java version
          export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
          export PATH=$JAVA_HOME/bin:$PATH

          # Final verification
          echo "=== Build Environment ==="
          echo "Java version: $(java -version 2>&1)"
          echo "JAVA_HOME: $JAVA_HOME"
          echo "Python version: $(python3 --version)"
          echo "Cython version: $(cython --version)"
          echo "Buildozer version: $(buildozer version)"
          echo "=========================="

          # Build with error handling
          buildozer android debug || {
            echo "Build failed. Checking for common issues..."
            echo "=== Buildozer logs ==="
            if [ -f .buildozer/logs/buildozer.log ]; then
              tail -n 100 .buildozer/logs/buildozer.log
            fi
            echo "===================="
            exit 1
          }

      - name: List Built Files
        if: success()
        run: |
          echo "=== Built files ==="
          find . -name "*.apk" -type f
          ls -la bin/ || echo "No bin directory found"
          echo "=================="

      - name: Upload APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: OTPInterceptor-APK
          path: "**/*.apk"
          retention-days: 30

      - name: Upload Build Logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            .buildozer/logs/
            .buildozer/android/platform/build-*/
          retention-days: 7
